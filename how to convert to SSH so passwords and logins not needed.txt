How to convert Git to SSH so passwords and logins are not constantly needed
(notes from Cole (student CSR), 12 Nov 2019)

1. Changed GitHub to use SSH (via "clone or download" button, then "use HTTPS" vis "use SSH" toggle).

2. Generated an ssh key (public and private keys) using git bash command, "ssh-keygen -t rsa -b 2048". That produced the key in the c:\users\[current user]\.ssh directory.

3. Saved the public key to GitHub (via "settings", then "SSH and GPG keys").

4. Converted the key to putty format (via puttygen), for use with Tortoise Git. This complexity was needed because apparently GitHub only accepts SSH format, but Tortoise Git only accepts putty format.

5. Saved the private key to local computer in c:\.ssh directory. (I copied the c:\users\[current user]\.ssh directory over to c:\.ssh so that all users could access it.)

6. Changed Tortoise Git "origin" to match the URL for the SSH-based repository (via right click Tortoise Git menu, Git/Remote, click on Origin; then paste in URL from the GitHub URL provided in the "Changed GitHub to use SSH" section above). 

7. Pointed Tortoise Git to the private key location on local computer (via same Git/Remote settings, click on Putty key "..." and select directory).

